name: Artifacts Workflow

on:
  workflow_dispatch:

jobs:
  download-artifacts:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Target Repo
        uses: actions/checkout@v4

      - name: Setup GH CLI
        run: |
          sudo apt update
          sudo apt install gh

      - name: Authenticate GH CLI
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token

      - name: Download and Extract Artifacts
        env:
          SOURCE_REPO: "FajoX1/fagramdesktop"
          WORKFLOW_NAME: "linux"
        run: |
          RUN_ID=$(gh run list \
            --repo $SOURCE_REPO \
            --workflow $WORKFLOW_NAME \
            --status success \
            --limit 1 \
            --json databaseId \
            -q '.[0].databaseId')

          echo "Downloading artifacts from run ID: $RUN_ID"
          
          gh run download $RUN_ID \
            --repo $SOURCE_REPO \
            --dir artifacts_download

      - name: Create Release with Tarball
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TARBALL_PATH=$(find artifacts_download -name "*.tar.gz" -type f)
          RELEASE_TAG=$(basename "$TARBALL_PATH" .tar.gz | grep -o 'v[0-9]\+\.[0-9]\+\.[0-9]\+')
          
          echo "Extracted release tag: $RELEASE_TAG"
          
          if gh release view "$RELEASE_TAG" --repo ${{ github.repository }} > /dev/null 2>&1; then
            echo "Deleting existing release with tag $RELEASE_TAG..."
            gh release delete "$RELEASE_TAG" --repo ${{ github.repository }} --yes
          fi
          
          echo "Creating new release with tag $RELEASE_TAG..."
          gh release create "$RELEASE_TAG" \
            "$TARBALL_PATH" \
            --title "Prebuilt Tarball Release" \
            --notes "Latest prebuilt tarball from FajoX1/fagramdesktop linux workflow" \
            --repo ${{ github.repository }}
